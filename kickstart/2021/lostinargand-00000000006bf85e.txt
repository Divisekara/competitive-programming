
def solve():
    up = []
    down = []
    left = []
    right = []
    for i in range(R):
        up.append([])
        down.append([])
        left.append([])
        right.append([])
        for j in range(C):
            up[i].append(0)
            down[i].append(0)
            right[i].append(0)
            left[i].append(0)
    for i in range(R):
        for j in range(C):
            left[i][j] = grid[i][j] * (left[i][max(j - 1, 0)] + grid[i][j])
    for i in range(R):
        for j in range(C - 1, -1, -1):
            right[i][j] = grid[i][j] * (right[i][min(C - 1, j + 1)] + grid[i][j])
    for j in range(C):
        for i in range(R):
            up[i][j] = grid[i][j] * (up[max(i - 1, 0)][j] + grid[i][j])
    for j in range(C):
        for i in range(R - 1, -1, -1):
            down[i][j] = grid[i][j] * (down[min(R - 1, i + 1)][j] + grid[i][j])
    res = 0
    # print(up)
    # print(right)
    for i in range(R):
        for j in range(C):
            # up - right
            res += max(0, min(right[i][j], up[i][j] // 2) - 1)
            res += max(0, min(up[i][j], right[i][j] // 2) - 1)
            # up - left
            res += max(0, min(left[i][j], up[i][j] // 2) - 1)
            res += max(0, min(up[i][j], left[i][j] // 2) - 1)
            # down - right
            res += max(0, min(right[i][j], down[i][j] // 2) - 1)
            res += max(0, min(down[i][j], right[i][j] // 2) - 1)
            # down - left
            res += max(0, min(left[i][j], down[i][j] // 2) - 1)
            res += max(0, min(down[i][j], left[i][j] // 2) - 1)
    return res




T = int(input())
for t in range(1, T + 1):
    R, C = list(map(int, input().split()))
    grid = []
    for r in range(R):
        grid.append(list(map(int, input().split())))
    ans = solve()
    print("Case #" + str(t) + ": " + str(ans))